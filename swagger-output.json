{
  "swagger": "2.0",
  "info": {
    "title": "Task Management API",
    "description": "API for user registration, login, profile management, and task handling.",
    "version": "1.0.0"
  },
  "host": "node-swagger-task-psiborg.onrender.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "User Authentication",
      "description": "Endpoints for user registration, login, and logout."
    },
    {
      "name": "User Management",
      "description": "Endpoints for managing users, including profile updates and retrieval (allowed only for Admin)."
    },
    {
      "name": "Tasks Management",
      "description": "APIs for task management including creation, assignment, and updates."
    },
    {
      "name": "Task Assignment",
      "description": "APIs for assigning tasks to users and retrieving user-specific tasks."
    }
  ],
  "schemes": ["https"],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT token for authorization."
    }
  },
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["User Authentication"],
        "summary": "Register a new user.",
        "description": "Create a new user account by providing username, email, and password.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string", "example": "GaneshPatel123" },
                "email": { "type": "string", "example": "ganesh123@gmail.com" },
                "password": { "type": "string", "example": "Ganesh@123" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "User registered successfully." },
          "400": { "description": "Invalid input." },
          "500": { "description": "Server error." }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User Authentication"],
        "summary": "Login a user.",
        "description": "Authenticate a user using email and password.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string", "example": "ganesh123@gmail.com" },
                "password": { "type": "string", "example": "Ganesh@123" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Login successful, JWT token issued." },
          "400": { "description": "Invalid credentials." },
          "500": { "description": "Server error." }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["User Authentication"],
        "summary": "Logout a user.",
        "description": "Invalidate the user's current JWT token.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "required": true,
            "description": "Bearer token for authorization."
          }
        ],
        "responses": {
          "200": { "description": "Logout successful." },
          "401": { "description": "Unauthorized." },
          "500": { "description": "Server error." }
        }
      }
    },
    "/users/profile": {
      "get": {
        "summary": "Get User Profile",
        "tags": ["User Authentication"],
        "description": "Retrieve the profile details of the logged-in user.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer token_here"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Not Found - User profile not found"
          }
        }
      }
    },
   "/admin/add-user": {
      "post": {
        "tags": ["User Management"],
        "summary": "Add a new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string", "example": "GaneshPatel123" },
                "email": { "type": "string", "example": "ganesh123@gmail.com" },
                "password": { "type": "string", "example": "Ganesh@123" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "User registered successfully." },
          "400": { "description": "Invalid input." },
          "500": { "description": "Server error." }
        }
      }
    },
    "/admin/delete-user/{id}": {
      "delete": {
        "tags": ["User Management"],
        "summary": "Delete a user by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": { "description": "User deleted successfully." },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/admin/user/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get details of a single user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": { "description": "User details retrieved successfully." },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      }
    },
"/admin/users/": {
  "get": {
    "tags": ["User Management"],
    "summary": "Get details of all users",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "responses": {
      "200": { 
        "description": "User details retrieved successfully.", 
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "string" },    
                  "name": { "type": "string" },  
                  "email": { "type": "string" }, 
                  "role": { "type": "string" }   
                }
              }
            }
          }
        }
      },
      "500": { "description": "Internal server error." }
    }
  }
}
,
  "/admin/change-role/{id}": {
  "put": {
    "tags": ["User Management"],
    "summary": "Change a user's role",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The ID of the user whose role is being changed."
      },
      {
        "name": "body",
        "in": "body",
        "required": true,
        "description": "The new role for the user.",
        "schema": {
          "type": "object",
          "properties": {
            "role": {
              "type": "string",
              "enum": ["admin", "manager", "user"],
              "description": "The new role to assign to the user."
            }
          },
          "required": ["role"]
        }
      }
    ],
    "responses": {
      "200": {
        "description": "User role updated successfully."
      },
      "404": {
        "description": "User not found."
      },
      "500": {
        "description": "Internal server error."
      }
    }
  }
},
    "/tasks": {
      "post": {
        "tags": ["Tasks Management"],
        "summary": "Create a new task",
        "description": "Add a new task to the system.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "New Task"
                },
                "description": {
                  "type": "string",
                  "example": "Details about the task."
                },
                "dueDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2024-12-31T23:59:59Z"
                },
                "priority": {
                  "type": "string",
                  "enum": ["low", "medium", "high"],
                  "example": "medium"
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "in-progress", "completed"],
                  "example": "pending"
                }
               },
               "required": ["title", "description", "dueDate"]
          }
        }
        ],
        "responses": {
          "201": { "description": "Task created successfully." },
          "400": { "description": "Invalid input." },
          "500": { "description": "Server error." }
        }
      }
    },
    "/tasks/": {
      "get": {
        "tags": ["Tasks Management"],
        "summary": "Retrieve task details by ID",
        "description": "Fetch details of a specific task using its ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the task."
          }
        ],
        "responses": {
          "200": { "description": "Task details retrieved successfully." },
          "404": { "description": "Task not found." },
          "500": { "description": "Server error." }
        }
      }
    },
    "/tasks/{id}": {
      "put": {
        "tags": ["Tasks Management"],
        "summary": "Update a task",
        "description": "Modify the details of an existing task.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the task to be updated."
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": { "type": "string", "example": "Updated Task" },
                "description": { "type": "string", "example": "Updated details about the task." },
                "deadline": { "type": "string", "format": "date-time", "example": "2024-12-31T23:59:59Z" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Task updated successfully." },
          "404": { "description": "Task not found." },
          "500": { "description": "Server error." }
        }
      }
    },
    "/tasks/assign": {
      "post": {
        "tags": ["Task Assignment"],
        "summary": "Assign a task to a user",
        "description": "Assign a specific task to a user by linking the task ID and user ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "taskId": { "type": "string", "example": "64a0b4c9d8d1b8e1bda12345" },
                "userId": { "type": "string", "example": "64a0b4c9d8d1b8e1bda67890" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "Task assigned successfully." },
          "400": { "description": "Invalid input or task already assigned." },
          "500": { "description": "Server error." }
        }
      }
    },
    "/tasks/user/{userId}": {
      "get": {
        "tags": ["Task Assignment"],
        "summary": "Get tasks assigned to a user",
        "description": "Fetch all tasks assigned to a specific user using their user ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the user."
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks retrieved successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "taskId": { "type": "string" },
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "deadline": { "type": "string", "format": "date-time" }
                }
              }
            }
          },
          "404": { "description": "User or tasks not found." },
          "500": { "description": "Server error." }
        }
      }
    },
    "/tasks/unassign": 
    {
      "delete": {
        "tags": ["Task Assignment"],
        "summary": "Unassign a task from a user",
        "description": "Remove the assignment of a task from a user.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "taskId": { "type": "string", "example": "64a0b4c9d8d1b8e1bda12345" },
                "userId": { "type": "string", "example": "64a0b4c9d8d1b8e1bda67890" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Task unassigned successfully." },
          "404": { "description": "Task or user not found." },
          "500": { "description": "Server error." }
        }
      }
    }


  }
  
}
